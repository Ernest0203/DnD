{"version":3,"sources":["assets/images/icon.svg","containers/Dnd/Dnd.js","reducers/reducer.js","containers/Dnd/DndWrapper.js","containers/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Wrapper","styled","div","imgUrl","Dnd","onChange","useState","dragging","setDrag","converImgToUrl","e","image","target","files","dataTransfer","items","getAsFile","test","name","alert","reader","FileReader","readAsDataURL","onload","event","Image","src","result","height","width","className","onDrop","preventDefault","stopPropagation","length","drop","onDragOver","dragOver","onDragEnter","dragEnter","onDragLeave","currentTarget","dragLeave","defaultLogo","alt","type","reducer","state","action","DndWrapper","useReducer","data","dispatch","url","LayoutWrapper","Layout","AppWrapper","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.daafaa08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.8289353d.svg\";","\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport defaultLogo from '../../assets/images/icon.svg';\r\n\r\nconst Dnd = ({ imgUrl, onChange }) => {\r\n  const [dragging, setDrag] = useState(false);\r\n\r\n  const dragOver = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }\r\n\r\n  const dragEnter = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n      setDrag(true);\r\n    }\r\n  };\r\n\r\n  const dragLeave = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (e.target !== e.currentTarget) return false;\r\n    setDrag(false);\r\n  }\r\n\r\n  const drop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n      converImgToUrl(e);\r\n      setDrag(false);\r\n    }\r\n  }\r\n\r\n  const converImgToUrl = (e) => {\r\n    const image = e.target.files ? e.target.files[0] : e.dataTransfer.items[0].getAsFile();\r\n    if (!image || !(/\\.(jpe?g|png|gif)$/i.test(image.name))) {\r\n      alert ('File should be png, jpeg format');\r\n      return false;\r\n    } \r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(image);\r\n    reader.onload = (event) => {\r\n      const image = new Image();\r\n      image.src = event.target.result;\r\n      image.onload = () => {\r\n        if (image.height > 103 || image.width > 103) {\r\n          alert ('Image should be 100px size');\r\n          return false;\r\n        }\r\n        onChange(image.src);\r\n      }\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Wrapper imgUrl={imgUrl}>\r\n      <div className={`dndContainer ${dragging ? \"dragging\" : \"\"}`}\r\n        onDrop={e => drop(e)}\r\n        onDragOver={e => dragOver(e)}\r\n        onDragEnter={e => dragEnter(e)}  \r\n        onDragLeave={e => dragLeave(e)}\r\n      >\r\n        <div className=\"dndContainer__content\">\r\n          <div className=\"logo\">\r\n            <img src={imgUrl ? imgUrl : defaultLogo} alt=\"\"/>\r\n          </div>\r\n          <div className=\"desc\">\r\n            {imgUrl ? \"Drag & drop here to replace\" : \"Drag & drop here\"}\r\n            <p>- or -</p>\r\n          </div>\r\n          <div className=\"btn\">\r\n            <label><input type=\"file\" onChange={e => converImgToUrl(e)} />{imgUrl ? \"Select  file to replace\" : \"Select  file to upload\"}</label>\r\n          </div>\r\n        </div>\r\n\t\t\t</div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 20px;\r\n  .dndContainer {\r\n    border: 1px solid transparent;\r\n    display: flex;\r\n    min-height: 470px;\r\n    &.dragging {\r\n        background-color: #F5F9FF;\r\n        border: 1px dashed #4991E5;\r\n    }\r\n    &__content {\r\n      margin: auto;\r\n      font-size: 12px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      .logo {\r\n        display: flex;\r\n        border: 1px solid #D1E3F8;\r\n        border-radius: 50%;\r\n        margin-bottom: 9px;\r\n        height: 80px;\r\n        width: 80px;\r\n        overflow: hidden;\r\n        position: relative;\r\n        img {\r\n          display: block;\r\n          margin: auto;\r\n          position: absolute;\r\n          top: 0;\r\n          right: 0;\r\n          bottom: 0;\r\n          left: 0;\r\n          width: ${({imgUrl}) => imgUrl ? '100%' : 'auto'};\r\n        }\r\n      }\r\n      .desc {\r\n        color: #324964;\r\n         p {\r\n          color: #6B85A3;\r\n          text-align: center;\r\n          margin: 8px 0 4px 0;\r\n         }\r\n      }\r\n      .btn {\r\n        input {\r\n          width: 0;\r\n\t        height: 0;\r\n        }\r\n        label {\r\n          cursor: pointer;\r\n          color: #4991E5;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Dnd;","export default function reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SET_IMG':\r\n      return { ...state, imgUrl: action.imgUrl }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useReducer } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Dnd from './Dnd';\r\nimport reducer from '../../reducers/reducer.js';\r\n\r\nconst DndWrapper = () => {\r\n\tconst [data, dispatch] = useReducer(reducer, { imgUrl: ''});\r\n\r\n\tconst onChange = (url) => {\r\n\t\tdispatch({ type: 'SET_IMG', imgUrl: url })\r\n\t}\r\n\r\n  return (\r\n    <Wrapper>\r\n\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t<div className=\"wrapper__header\">\r\n\t\t\t\t\t<h2>Company Logo</h2>\r\n\t\t\t\t\t<p>Logo should be square, 100px size and in png, jpeg file format.</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"wrapper__content\">\r\n\t\t\t\t\t<Dnd imgUrl={data.imgUrl} onChange={onChange}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n\t.wrapper {\r\n\t\tbackground-color: #fff;\r\n\t\tborder: 1px solid #E8F1FB;\r\n\t\tfont-family: 'Proxima Nova Regular';\r\n\t\twidth: 400px;\r\n\t\t&__header {\r\n\t\t\tborder-bottom: 1px solid #E8F1FB;\r\n\t\t\tpadding: 21px 25px 18px 30px;\r\n\t\t\th2 {\r\n\t\t\t\tcolor: #1A2533;\r\n\t\t\t\tfont-size: 20px;\r\n\t\t\t\tfont-family: 'Proxima Nova Bold';\r\n\t\t\t\tmargin: 0;\r\n\t\t\t}\r\n\t\t\tp {\r\n\t\t\t\tcolor: #6B85A3;\r\n\t\t\t\tfont-size: 12px;\r\n\t\t\t\tmargin: 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`\r\n\r\nexport default DndWrapper;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport DndWrapper from './Dnd/DndWrapper';\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <LayoutWrapper>\r\n\t\t\t\t<DndWrapper />\r\n    </LayoutWrapper>\r\n  )\r\n}\r\n\r\nconst LayoutWrapper = styled.div`\r\n\tbackground: #F5F9FF;\r\n\tpadding: 20px 20px 20px 20px;\r\n`\r\n\r\nexport default Layout;","import React, { Fragment } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport Layout from './containers/Layout';\nimport './assets/fonts/fonts.css';\n\nfunction App() {\n  return (\n    <Fragment>\n      <GlobalStyle />\n        <AppWrapper>\n          <header className=\"appHeader\">\n            <h1>D&D</h1>\n          </header>\n          <main className=\"appMain\">\n            <Layout/>\n          </main>\n        </AppWrapper>\n    </Fragment>\n  );\n}\n\nconst AppWrapper = styled.div`\n  width: 1200px;\n  margin: 0 auto;\n  box-shadow: 0 3px 10px rgba(0,0,0, .2);\n  background-color: #fff;\n  .appHeader {\n    border-bottom: 2px solid #ddd;\n    padding: 20px 0;\n    h1 {\n      text-align: center;\n    }\n  }\n`;\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n   box-sizing: border-box;\n  }\n  body {\n    background-color: #eee;\n    color: #828684;\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  li {\n    list-style: none;\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n      monospace;\n  }\n`;\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}